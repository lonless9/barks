syntax = "proto3";

package barks.executor;

import "driver.proto";

// Executor service for receiving and executing tasks
service ExecutorService {
    // Launch a task on this executor
    rpc LaunchTask(LaunchTaskRequest) returns (LaunchTaskResponse);

    // Kill a running task
    rpc KillTask(KillTaskRequest) returns (KillTaskResponse);

    // Get executor status and metrics
    rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);

    // Shutdown the executor
    rpc Shutdown(ShutdownRequest) returns (ShutdownResponse);
}

// Launch task request
message LaunchTaskRequest {
    string task_id = 1;
    string stage_id = 2;
    uint32 partition_index = 3;
    bytes serialized_task = 4;
    map<string, string> properties = 5;
    uint64 max_result_size_bytes = 6;
}

// Launch task response
message LaunchTaskResponse {
    bool success = 1;
    string message = 2;
}

// Kill task request
message KillTaskRequest {
    string task_id = 1;
    string reason = 2;
    bool interrupt_thread = 3;
}

// Kill task response
message KillTaskResponse {
    bool success = 1;
    string message = 2;
}

// Get status request
message GetStatusRequest {
    bool include_metrics = 1;
}

// Get status response
message GetStatusResponse {
    barks.driver.ExecutorStatus status = 1;
    ExecutorInfo info = 2;
    ExecutorMetrics metrics = 3;
    repeated TaskInfo running_tasks = 4;
}

// Shutdown request
message ShutdownRequest {
    string reason = 1;
}

// Shutdown response
message ShutdownResponse {
    bool success = 1;
    string message = 2;
}



// Executor information
message ExecutorInfo {
    string executor_id = 1;
    string host = 2;
    uint32 port = 3;
    uint32 cores = 4;
    uint64 memory_mb = 5;
    map<string, string> attributes = 6;
    uint64 start_time = 7;
}

// Executor metrics
message ExecutorMetrics {
    uint64 total_tasks = 1;
    uint64 failed_tasks = 2;
    uint64 succeeded_tasks = 3;
    uint64 total_duration_ms = 4;
    uint64 total_gc_time_ms = 5;
    uint64 total_input_bytes = 6;
    uint64 total_shuffle_read_bytes = 7;
    uint64 total_shuffle_write_bytes = 8;
    uint64 max_memory_bytes = 9;
    uint64 memory_used_bytes = 10;
    uint32 active_tasks = 11;
}

// Task information
message TaskInfo {
    string task_id = 1;
    string stage_id = 2;
    uint32 partition_index = 3;
    uint64 start_time = 4;
    barks.driver.TaskState status = 5;
}
