name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Protobuf Compiler)
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose --workspace

      - name: Run tests
        run: cargo test --verbose --workspace

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

  coverage:
    # use llvm-cov to build and collect coverage and outputs in a format that
    # is compatible with codecov.io
    #
    # note that codecov as of v4 requires that CODECOV_TOKEN from
    #
    #   https://app.codecov.io/gh/<user or org>/<project>/settings
    #
    # is set in two places on your repo:
    #
    # - https://github.com/<user>/<repo>/settings/secrets/actions
    # - https://github.com/<user>/<repo>/settings/secrets/dependabot
    #
    # (the former is needed for codecov uploads to work with Dependabot PRs)
    #
    # PRs coming from forks of your repo will not have access to the token, but
    # for those, codecov allows uploading coverage reports without a token.
    # it's all a little weird and inconvenient. see
    #
    #   https://github.com/codecov/feedback/issues/112
    #
    # for lots of more discussion
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install system dependencies (Protobuf Compiler)
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile

      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info

      - name: Record Rust version
        run: echo "RUST=$(rustc --version)" >> "$GITHUB_ENV"

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,RUST
